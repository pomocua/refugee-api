plugins {
    id "java"
    id "application"
    id "org.springframework.boot" version "2.6.4"
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
    id "com.google.cloud.tools.jib" version "3.2.0"
}

group = 'ua.pomoc'
version = "1.0.0-rc.1"

application {
    mainClass = "ua.pomoc.refugee.RefugeeBackendApplication"
    applicationName = "refugee"
}

bootJar {
    enabled = true
    archiveFileName = "application.jar"
    manifest {
        attributes 'provider': 'gradle'
    }
}

springBoot {
    buildInfo()
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set("logbackVersion", "0.1.5")
    set("openUiVersion", "1.6.6")
    set("hibernateValidatorVersion", "6.1.5.Final")
    set("javaxValidationVersion", "2.0.1.Final")
    set("neovisionariesVersion", "1.29")
}

dependencies {
    //region spring
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.springframework.boot:spring-boot-starter-jdbc")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springdoc:springdoc-openapi-ui:${openUiVersion}")
    implementation("org.springframework:spring-context-indexer")
    annotationProcessor ("org.springframework.boot:spring-boot-configuration-processor")
    developmentOnly ("org.springframework.boot:spring-boot-devtools")
    //endregion

    //region validation
    implementation ("javax.validation:validation-api:${javaxValidationVersion}")
    implementation ("org.hibernate.validator:hibernate-validator:${hibernateValidatorVersion}")
    //endregion

    //region logback
    implementation("ch.qos.logback.contrib:logback-json-classic:${logbackVersion}")
    implementation("ch.qos.logback.contrib:logback-jackson:${logbackVersion}")
    //endregion

    //region database
    runtimeOnly ("org.postgresql:postgresql")
    implementation ("org.flywaydb:flyway-core")
    //endregion

    //region lombok
    compileOnly ("org.projectlombok:lombok")
    annotationProcessor ("org.projectlombok:lombok")
    //endregion

    //region test
    testImplementation ("org.springframework.boot:spring-boot-starter-test")
    //endregion

    //region monitoring
    implementation("io.micrometer:micrometer-registry-prometheus")
    //endregion

    //region 3rd party libs
    implementation ("com.neovisionaries:nv-i18n:${neovisionariesVersion}")
    //endregion
}

jib {
    from {
        image = "gcr.io/distroless/java17-debian11"
    }
    to {
        image = "ua/refugee" // todo vk: clarify naming
        tags = ["$version", "latest"]
    }
    container {
        jvmFlags = ["-Xss256k",
                    "-Xmx512m",
                    "-Xms256m",
                    "-XX:MaxMetaspaceSize=128m",
                    "-XX:+AlwaysActAsServerClassMachine",
                    "-XX:+ExitOnOutOfMemoryError",
                    "-XX:+UseContainerSupport",
                    "-XX:+UseStringDeduplication",
                    "-XX:+ExitOnOutOfMemoryError",
                    "-XX:+OptimizeStringConcat",
                    "-XX:MaxRAMPercentage=75",
                    "-XX:InitialRAMPercentage=50",
                    "-XX:HeapDumpPath=/opt/tmp/heapdump.bin"]
        mainClass = "ua.pomoc.refugee.RefugeeBackendApplication"
        ports = ['8080']
        labels = ["app-name": "refugee", "service-version": "$version"]
        creationTime = "USE_CURRENT_TIMESTAMP"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
