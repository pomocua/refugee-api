plugins {
    id "java"
    id "application"
    id "org.springframework.boot" version "2.6.4"
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
    id "com.google.cloud.tools.jib" version "3.2.0"
}

group = 'ua.pomoc'
version = "1.0.0-rc.1"

application {
    mainClass = "ua.pomoc.refugee.RefugeeBackendApplication"
    applicationName = "refugee"
}

bootJar {
    enabled = true
    archiveFileName = "application.jar"
    manifest {
        attributes 'provider': 'gradle'
    }
}

springBoot {
    buildInfo()
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set("logbackVersion", "0.1.5")
    set("openUiVersion", "1.6.6")
    set("hibernateValidatorVersion", "6.1.5.Final")
    set("javaxValidationVersion", "2.0.1.Final")
    set("neovisionariesVersion", "1.29")
}

dependencies {
    //region spring
    implementation("org.springframework.boot:spring-boot-starter-web") {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    implementation("org.springframework.boot:spring-boot-starter-undertow")
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.springframework.boot:spring-boot-starter-jdbc")
    implementation("org.springdoc:springdoc-openapi-ui:${openUiVersion}")
    implementation("org.springframework:spring-context-indexer")
    annotationProcessor ("org.springframework.boot:spring-boot-configuration-processor")
    //endregion

    //region validation
    implementation ("javax.validation:validation-api:${javaxValidationVersion}")
    implementation ("org.hibernate.validator:hibernate-validator:${hibernateValidatorVersion}")
    //endregion

    //region logback
    implementation("ch.qos.logback.contrib:logback-json-classic:${logbackVersion}")
    implementation("ch.qos.logback.contrib:logback-jackson:${logbackVersion}")
    //endregion

    //region database
    runtimeOnly ("org.postgresql:postgresql")
    implementation ("org.flywaydb:flyway-core")
    //endregion

    //region lombok
    compileOnly ("org.projectlombok:lombok")
    annotationProcessor ("org.projectlombok:lombok")
    //endregion

    //region 3rd party libs
    implementation ("com.neovisionaries:nv-i18n:${neovisionariesVersion}")
    //endregion
}

jib {
    from {
        image = "gcr.io/distroless/java17-debian11"
    }
    to {
        image = "740093168300.dkr.ecr.us-east-1.amazonaws.com/refugee"
        tags = ["$version", "latest"]
        auth {            
            password = "eyJwYXlsb2FkIjoiTDcrWEpsbDZVUlQ0Y3pFdGI0NWlSN0dCTDJFYmdzczZSOWhvVnJTVVFESkJDeHM1d1Q5N3ZsaW1rQkhEOTVGMmZvMDJQN0pxNmRDZEE4WG4xcjBXTGFQWUZlWjV0UEtCQzFtbERuN0o4TWJsOG5HaU5CMGhueUFBMnptVnBBRkZtQmJCUWtmMzZkZGxjYXp0ckttZnRXNFZQNUVVYjJTVlM0K1JyNTJYSUM1QTFabTNMMEF4WlQxZ0FaZnBtaGxSWE56ckhvaFA2c2RyVlhuQ1RiQjNGeGdhQXdtamZLM2d4ZTJzVjhXWHptdlc4ZWlKSVU5Z1haRXhwbUdJc3hORmNwZzErL0VIWi9ObG1FZ3YyYklEY2psS3pCekwxcUNKQVd4SUlnRENRNW02NVRuTm5JZU1MQXBrbkNmSm5US0ppUFo3bzZKdWYrb3F4azNHcjdKcThiaGtNZEdxaWxLcGthVXE2NHE0aitwdnFNa091SHc1TWhxdGxYVTRWYlFsYlRBQS9WVm5qSC8zNkhhcVF1cmI4Yk00ME9TTHJZaTcxVHFjVWYyRzc3VnBIOS9ENkhzaWpOOGN3TDJwc3JCVitKVFBvQzJNWXhYdXpmcjhLV0V1anpSRWV2YUt3ZFhScTNhWE9lNGdZZGk0VVlpeUNxeDVaSVZDcWpZRHdtUzF4bVdHUHhzUGtwSE10YzcyZVM5WnRic0NyOG54ZXgvaGY1cUx4MzdaNlU1RzJJTG5KaFA3K3puNHl0YnFyazVMYTZjT1JuSmRlM3NEaXo0bGswK3R4MjVQUHRGSlNoVE5HbGk2dlFDY2VYd1dVbHZxNWJ4SUFoTlB2MGlLekVubmhiT25FU0VhcWhvcG1WekJGVXhNZEZOYW4xU2JiUDFPWFI2dmE2QUFqNms4ZXhnOXcyZEgyNmM3Y1dETHJ4MW85MHk1TjFkMlhVUmhsQ05NTS9nRmE1QzlpVFJIWkpadkxUTGU0N0Q1R2NpVlFRTEpuMnByVE84Zm4vdHRuZzg2WVhnOTZiNDdzUnFoaFpqUHlvRWtRVEF6emJEc2lSd0FobjkvZGFvZTJyRDFxQVk2RXdYb0hrMjl5cWFLQ1BUb01lRWRVakl4c2lCSGNXcVhRUkYzNHQ0UTlnYmJuTDA1Lzd6d3pWRjNjMTBrNXFqSzB0RndRV1NkdFBvUWllUDhGckhCY3dNNWhha2dnclVyWnVyajdvc0JhMVZXNW15UFRmUFdLZmZQcFhDM0FGWUxzQmhtdU9Jem8xbC9HY3lRdng3UDEwTFFoRm1vek5xdjUyWCtycFQ4cnBvL0xKMWJPK2RzMUI5UUIzS3EyZ1NPT1dsVVQvSWdCUmdvNkJGcm02Z1gyVU56VHJmZEI0WmM0Q3E0RVV3NEZMUmkiLCJkYXRha2V5IjoiQVFFQkFIaDN6WU9kdHBCQlNWdy9ZMmFuOEJYSUQ0a3dMUWZub1RqNXp3WnRHSlpvWlFBQUFINHdmQVlKS29aSWh2Y05BUWNHb0c4d2JRSUJBREJvQmdrcWhraUc5dzBCQndFd0hnWUpZSVpJQVdVREJBRXVNQkVFREgzNVFYTDBrNWVlWUxKSjhRSUJFSUE3TG1HU01lMUViZXEwa3ZGOXlXejkzYXFLOUI1R0hOQmRPWkp3RUNqblZnenpDbHZVRnJEcDFvclFBbjhCTWhPMHM4aWRTVksxOERTODFzVT0iLCJ2ZXJzaW9uIjoiMiIsInR5cGUiOiJEQVRBX0tFWSIsImV4cGlyYXRpb24iOjE2NDc2NDMzOTh9"
        }
    }
    container {
        jvmFlags = ["-Xss256k",
                    "-Xmx512m",
                    "-Xms256m",
                    "-XX:MaxMetaspaceSize=128m",
                    "-XX:+AlwaysActAsServerClassMachine",
                    "-XX:+ExitOnOutOfMemoryError",
                    "-XX:+UseContainerSupport",
                    "-XX:+UseStringDeduplication",
                    "-XX:+ExitOnOutOfMemoryError",
                    "-XX:+OptimizeStringConcat",
                    "-XX:MaxRAMPercentage=75",
                    "-XX:InitialRAMPercentage=50",
                    "-XX:HeapDumpPath=/opt/tmp/heapdump.bin"]
        mainClass = "ua.pomoc.refugee.RefugeeBackendApplication"
        ports = ['8080']
        labels = ["app-name": "refugee", "service-version": "$version"]
        creationTime = "USE_CURRENT_TIMESTAMP"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
